extends layout

block content
  h1= title
  p Welcome to #{title}
  p Total Request 
    div#total #{totalRequest}
  svg(width="960",height="500")
  style.
    body { font: 12px Arial;}
    path { 
        stroke: steelblue;
        stroke-width: 2;
        fill: none;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: grey;
        stroke-width: 1;
        shape-rendering: crispEdges;
    }
  script.

    var parseTime = d3.time.format("%Y/%m/%d %H:%M:%S").parse;
    var data = [!{data}];
    //- var data = [ {num: 102, datetime: 1497754933162},  {num: 109, datetime: 1497754933162}];
    var socket = io();
    socket.on('total', function(attack){
      document.querySelector("#total").innerText = attack.num;
      data.push({
        datetime: parseTime(moment(attack.datetime).format('YYYY/MM/DD h:mm:ss')),
        num: attack.num
      });
      updateData();
    });
    
    var margin = {top: 30, right: 20, bottom: 30, left: 50},
    width = 600 - margin.left - margin.right,
    height = 270 - margin.top - margin.bottom;

    // Set the ranges
    var x = d3.time.scale().range([0, width]);
    var y = d3.scale.linear().range([height, 0]);

    var data = data.map(function(e){
      return {
        datetime: parseTime(moment(e.datetime).format('YYYY/MM/DD h:mm:ss')),
        num: e.num
      }
    })

    // Define the axes
    var xAxis = d3.svg.axis().scale(x)
        .orient("bottom").ticks(1);

    var yAxis = d3.svg.axis().scale(y)
        .orient("left").ticks(10);

    // Define the line
    var valueline = d3.svg.line()
        .x(function(d) { return x(d.datetime); })
        .y(function(d) { return y(d.num); });
        
    // Adds the svg canvas
    var svg = d3.select("svg")
        .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
        .append("g")
            .attr("transform", 
                  "translate(" + margin.left + "," + margin.top + ")");


    // Scale the range of the data
    x.domain(d3.extent(data, function(d) { return d.datetime; }));
    y.domain([0, d3.max(data, function(d) { return d.num; })]);

    // Add the valueline path.
    svg.append("path")
        .attr("class", "line")
        .attr("d", valueline(data));

    // Add the X Axis
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    // Add the Y Axis
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

    function updateData() {
        // Scale the range of the data again 
          x.domain(d3.extent(data, function(d) { return d.datetime; }));
          y.domain([0, d3.max(data, function(d) { return d.num; })]);

        // Select the section we want to apply our changes to
        var svg = d3.select("svg").transition();

        // Make the changes
            svg.select(".line")   // change the line
                .duration(750)
                .attr("d", valueline(data));
            svg.select(".x.axis") // change the x axis
                .duration(750)
                .call(xAxis);
            svg.select(".y.axis") // change the y axis
                .duration(750)
                .call(yAxis);
    }